[ [ { type: 'datatype', name: 'prefix' } ] ]
[
  [
    {
      type: 'negation',
      expression: { type: 'datatype', name: 'prefix' }
    }
  ]
]
[
  [
    {
      type: 'disjunction',
      disjuncts: [
        { type: 'datatype', name: 'blank' },
        { type: 'datatype', name: 'prefix' }
      ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'CURIE',
      args: [ { type: 'field', table: 'prefix', column: 'prefix' } ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'CURIE',
      args: [ { type: 'field', table: 'prefix', column: 'xspace prefix' } ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'CURIE',
      args: [ { type: 'named_arg', name: 'named', value: 'arg' } ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'split',
      args: [
        { type: 'field', table: 'prefix', column: 'prefix' },
        '&',
        { type: 'function', name: 'foo', args: [ 'bar' ] },
        {
          type: 'function',
          name: 'CURIE',
          args: [ { type: 'field', table: 'prefix', column: 'prefix' } ]
        }
      ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'a',
      args: [
        {
          type: 'function',
          name: 'b',
          args: [ { type: 'function', name: 'c', args: [ 'd' ] } ]
        }
      ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'in',
      args: [
        {
          type: 'field',
          table: 'with-dash',
          column: 'space column'
        }
      ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'regex',
      args: [
        {
          type: 'regex',
          pattern: 'pattern',
          replace: 'replacement',
          flags: 'gi'
        }
      ]
    }
  ]
]
[
  [
    {
      type: 'function',
      name: 'regex',
      args: [
        {
          type: 'regex',
          pattern: 'pat\\/ern',
          replace: 'replacement',
          flags: undefined
        }
      ]
    }
  ]
]
